<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unix on Tairan&#39;s Story</title>
    <link>https://tairan.net/tags/unix/</link>
    <description>Recent content in Unix on Tairan&#39;s Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright 2019 Tairan Wang</copyright>
    <lastBuildDate>Wed, 04 Jun 2008 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://tairan.net/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【转】grep sed awk 使用技巧</title>
      <link>https://tairan.net/posts/2008-06-04-using-grep-sed-and-awk/</link>
      <pubDate>Wed, 04 Jun 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-04-using-grep-sed-and-awk/</guid>
      <description>引用 Grep的常用命令语法1. 双引号引用和单引号引用 在g r e p命令中输入字符串参数时，最好将其用双引号括起来。例如：”m y s t r i n g”。这样做有两个原因，一是以防被误解为 s h e l l命令，二是可以用来查找多个单词组成的字符串，例如：”jet plane”，如果不用双引号将其括起来，那么单词 p l a n e将被误认为是一个文件，查询结果将返回”文件不存在”的错误信息。 在调用变量时，也应该使用双引号，诸如： g r e p”$ M Y VA R”文件名，如果不这样，将 没有返回结果。 在调用模式匹配时，应使用单引号.[root@mypc ]# echo `grep 123 111.txt` (#注意是反单引号)
2. 常用的g r e p选项有： -c 只输出匹配行的计数。 -i 不区分大小写（只适用于单字符）。 -h 查询多文件时不显示文件名。 -l 查询多文件时只输出包含匹配字符的文件名。 -n 显示匹配行及行号。 -s 不显示不存在或无匹配文本的错误信息。 -v 显示不包含匹配文本的所有行。
3. 特殊的–在多个文件中进行查询 $ grep “sort”*.doc ( #在当前目录下所有. d o c文件中查找字符串”s o r t”) $ grep “sort it” * (#或在所有文件中查询单词”sort it”) 接下来的所有示例是指在单个文件中进行查询 4.</description>
    </item>
    
  </channel>
</rss>