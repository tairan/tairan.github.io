<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>我的声音 on Tairan&#39;s Story</title>
    <link>https://tairan.net/tags/%E6%88%91%E7%9A%84%E5%A3%B0%E9%9F%B3/</link>
    <description>Recent content in 我的声音 on Tairan&#39;s Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright 2019 Tairan Wang</copyright>
    <lastBuildDate>Sun, 21 Jun 2009 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://tairan.net/tags/%E6%88%91%E7%9A%84%E5%A3%B0%E9%9F%B3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>然后又该怎样？</title>
      <link>https://tairan.net/posts/2009-06-21-what-is-then/</link>
      <pubDate>Sun, 21 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2009-06-21-what-is-then/</guid>
      <description>网络上传来的消息一次又一次的刺激着网民，而网民一些行动的结果也同样刺激着脆弱敏感的人民公仆。
我们不能一遍又一遍的骂着操蛋的政府，又一次又一次的被政府剥削。
今天的政府为什么会成为今天的这个样子，我们需要好好的研究这段不算长的历史。
不能只提出问题就闪，这样和那个不负责的政府又有什么两样呢？
未来是我们的，我们应该多作一些实事。多到网下去看看，现在的人民的生活情况，什么是他们最需要的。整天面对虚假的媒体轰炸，你还会认为你的判断是正确的吗？ 毛主席说的对，没有调查就没有发言权。在没有得到信息的可靠的情况下，跟着起哄那你就是不明真相的群众。
我认为我们可以做的，</description>
    </item>
    
    <item>
      <title>这是一个操蛋的时代</title>
      <link>https://tairan.net/posts/2009-06-20-caodan/</link>
      <pubDate>Sat, 20 Jun 2009 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2009-06-20-caodan/</guid>
      <description>都30岁的人了，还被当成花季少年给绿坝护航了。
有一份还不错的工作却还为温饱发愁。</description>
    </item>
    
    <item>
      <title>欲善其事，必先利其器</title>
      <link>https://tairan.net/posts/2008-09-21-using-the-good-tools/</link>
      <pubDate>Sun, 21 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-09-21-using-the-good-tools/</guid>
      <description>欲善其事，必先利其器。不是说没了利器就不能善其事，而是在某种程度上利器是善其事的有力支持。相同的人去劈柴，在同样的时间内，钝斧的效率是远不及利斧的。
昨天我跟老婆一起从枫林路中山医院出发一路骑自行车去朱家角(计划是去上海大观园)。我骑的是一辆凤凰牌公路车，老婆骑的是普通城市车。公路车在速度上远高于城市车，而且骑的人也不会感觉到累。此为器一利。（中途，老婆也试着骑公路车，那个公路车的龙头实在僵硬，老婆在车上浑身紧张)
我的公路车是一周前买的二手车。自己从没骑过公路车，所以就当练习了。前面说过车子的龙头很僵硬，第二就是不能大转弯(非上海俗语中的大转弯)因为前车胎和脚蹬的距离太近，转弯大的时候会碰到脚。（如果这里有所改进，会成为灵活专项的利器之一)
昨天全部路程约90公里。到朱家角的时候，我的双手手腕有些疼痛，手掌更甚。为什么骑自行车手会很疼？我们走的路线是虹桥路转延安西路再转到沪青平公路(318国道)。这一路的道路也不是一马平川，路面状况绝不及奥运会公路自行车比赛的赛道。骑公路车时重心前倾，手臂承受不少的力量，我的公路车没有避震器，在坑洼路面上遇到的颠簸全部通过龙头传递到手臂了。近8个小时的颠簸，手掌已经有些肿胀。今早起来，肩部也是酸痛。（在道路不平的路面骑车，尤其是长时间的，一定要选择有避震器的自行车。这也可以成为利器之一.)
速度，公路车的速度可以轻松保持在25km/h 还可以快速的提高到35km/h。在车上被风吹得感觉太好了。可以上的了高速度，也是利器之一
以上举了一些例子来说明一个好的工具可以带来很多好处，但是这些都是提高成绩的要素，而不是基本功。如果自行车都不会骑，那给你辆超豪华的利器又有何用？
高手和俗人的区别之一是拥有扎实的基本功，并能熟练的使用利器。有了这个就能快速的消灭拦路虎！
btw， 在路上遇到4位看上去60岁以上的老人家，骑自行车。听口音像是北方人，他们向我打听去杭州的路线。猜想杭州也许并不是他们的目的地。</description>
    </item>
    
    <item>
      <title>强烈支持Web标准</title>
      <link>https://tairan.net/posts/2008-09-17-strong-support-for-web-standards/</link>
      <pubDate>Wed, 17 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-09-17-strong-support-for-web-standards/</guid>
      <description>我在linux下工作，支持正版软件！
有些网站就是懒，依赖着M$的统治地位，开发时就根本不在乎其他平台用户的感受！
今日，我访问国泰君安的网站准备开户在股市低迷时期杀入，可在firefox平台上，填写开户预约的时候，选择地区营业庭时，选择城市后就玩完了，下级菜单无法使用！这不是逼着我转向window吗？
虽然我可以依靠工作的优势得到正版Windows，可是我真的需要在linux下工作，学习！
再次鄙视一下那些乱来的，懒的，急功近利的网站！
强烈支持 Web标准</description>
    </item>
    
    <item>
      <title>保存劳动成果</title>
      <link>https://tairan.net/posts/2008-09-09-save-labor/</link>
      <pubDate>Tue, 09 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-09-09-save-labor/</guid>
      <description>在日常工作中，总要写一些小工具，或者一些代码片段等，这些都是自己的劳动成果，而且还有复用、备忘等功效。所以保存这些东西是有必要的。
管理这些文件是绝对有必要引入版本控制的，好处嘛是在是太多了，想知道的Google一下。因为是个人的文件管理，所以我选择了subversion。
subversion 是一个CS结构的版本管理工具，所以我需要一个稳定的Server端。个人资金有限不能自己托管服务器以供使用，这时又想到Google了。Google提供了免费的SVN服务器为各个开源项目使用。虽然咱最开始的目的是为了私用，由于Google SVN Server的特性，咱的文档可以自由访问，如果自己的文档能为他人提供便利，也不枉自己一心想为Freedom Software做点贡献。
如果你也有兴趣跟大家一起分享，我随时欢迎您的加入！
项目地址: http://code.google.com/p/misc-snippets/</description>
    </item>
    
    <item>
      <title>我想哭但是哭不出来！</title>
      <link>https://tairan.net/posts/2008-09-08-i-want-to-cry-but-i-have-not-any-tear/</link>
      <pubDate>Mon, 08 Sep 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-09-08-i-want-to-cry-but-i-have-not-any-tear/</guid>
      <description>入行做程序员也不是一天两天了，居然还是犯这样的低级错误，绝对不可原谅。 最近在写一个开源的项目svnaccesspolicy(用于管理在apache环境下的svn用户信息) ，基本功能已经完成，这些天一直在重构代码，让项目变得更模块话，更现代一些。重构阿重构，慢慢的快成形了。
这时忍不住要玩 Debian Live USB了，也就是把debian安装在2G的优盘上。安装很容易，为了能让在windows上也能查看优盘上的信息，把优盘分了2个区，分别是fat和fat32格式的。这时也为后面的遭遇埋下了伏笔。
优盘上的debian可以使用了，我就迫不及待的把svnaccesspolicy的源代码cut到了优盘上进行开发。此时既没check in代码也没用copy。
在家里使用一切到还顺利，毕竟全是linux环境。等到了公司，才发现windows竟然不认识分区的优盘，只能看到优盘的第一个主分区。而那个主分区是live debian系统的，源码都不在那里。于是乎，打开vmware尝试重新整理优盘。在做这些之前，由于live系统的不方便，就把代码打包压缩，并复制到了 vmdk (vmware的虚拟硬盘上)。然后尝试安装了centos, suse, ubuntu 等，再次证明如此安装系统到优盘上是需要大量做工作的。就暂时放弃，改装最新的live debian。
一切算是回到从前，准备把备份在vmware虚拟硬盘上的文件还原的时候，这才发现虚拟硬盘上空空也！空空也！辛苦的工作就这样付之东流！
切记，切记，工作要稳重。 实验环境要和工作环境完全分开。否则真的是欲哭无泪阿！</description>
    </item>
    
    <item>
      <title>Python中的lambda函数</title>
      <link>https://tairan.net/posts/2008-08-25-lambda-in-python/</link>
      <pubDate>Mon, 25 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-25-lambda-in-python/</guid>
      <description>Python支持一种有趣的语法，它允许你快速定义单行的最小函数。这些叫做lambda函数，是从Lisp借鉴来的，可以用在任何需要函数的地方。
 总的来说，lambda函数可以接收任意多个参数并且返回单个表达式的值。lambda函数不能包含命令，包含的表达式不能超过一个。不要试图向lambda函数中塞入太多的东西；如果你需要更复杂的东西，应该定义一个普通函数，然后想让它多长就多长。（当然，太长的函数也是不推荐的） lambda函数是一种风格问题。不一定非要使用它们；任意能够使用它们的地方，都可以定义一个单独的普通函数来进行替换。一般将它们用在需要封装的特殊的，非重用代码上，避免令代码中充斥着大量的单行函数。  lambda示例 1 # 普通函数
2 def f(x):
3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return x2
4 
5 &amp;gt;&amp;gt;&amp;gt;f(3)
6 6
7 
8 # lambda函数
9 func = lambda x: x2
10 &amp;gt;&amp;gt;&amp;gt;func(3)
11 6
12 &amp;gt;&amp;gt;&amp;gt;(lambda x: x*2)(3)
13 6</description>
    </item>
    
    <item>
      <title>万里长征第一步</title>
      <link>https://tairan.net/posts/2008-08-24-first/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-24-first/</guid>
      <description>有些事情现在不做，也许以后永远也不会做。
 第一步终于迈了出去。骑自行车出行，从徐家汇到闵行紫竹工业园。从Google地图上看距离约33公里，一个来回加上在紫竹工业园以及交大闵行校区骑行的路程一共约75公里。
一直梦想着能骑自行车出去，这次紫竹之行很成功，积累了一些自行车出行的经验。为自己自行车环中国游迈出了第一步！
一行三人，Shirley表现很出色！作为一名女生，75公里的路程硬是坚持了下来。好样的！</description>
    </item>
    
    <item>
      <title>借口是多么的苍白无力</title>
      <link>https://tairan.net/posts/2008-08-21-do-not-have-an-excuse/</link>
      <pubDate>Thu, 21 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-21-do-not-have-an-excuse/</guid>
      <description>面对犀利的询问者，无论什么样的托辞、借口都显得如此苍白。
还是认真的做好自己的工作。为自己的理想和目标工作！</description>
    </item>
    
    <item>
      <title>只有失败是不够的</title>
      <link>https://tairan.net/posts/2008-08-18-only-failure-is-not-enough/</link>
      <pubDate>Mon, 18 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-18-only-failure-is-not-enough/</guid>
      <description>更重要的是失败后总结，并修正错误。
俗话说失败是成功之母，这句话其实是概括了总结失败修正失败。只有总结失败，并修正才能不在同一个地方摔倒两次。</description>
    </item>
    
    <item>
      <title>沟通</title>
      <link>https://tairan.net/posts/2008-08-17-communicate/</link>
      <pubDate>Sun, 17 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-17-communicate/</guid>
      <description>在我看来，读书也是一种沟通，是与作者的一次沟通。作者通过他的著作来告诉你他想要表达的思想，如果能读懂作者的表达的思想，那么这次沟通就是成功的。如果通过阅读而不能理解作者的意思，那就说明此次沟通存在问题，自己的知识水平和作者不是一个高度、自己和作者的专业领域不同、作者是个疯子？这些都是造成沟通障碍的可能原因。
平时的工作生活中，我们也免不了要和其他人进行沟通，那每次沟通的成果如何呢？作为一名技术人员，免不了要和一些非技术员进行沟通。此时如何让他们知道自己在说些什么呢？众所周知，一些大牛们说的话都很通俗易懂，以至于人们有点怀疑他们是不是真的专家。殊不知，这才是牛的最高境界。将专业知识用平明话的语言来进行表达。什么是相对论？爱因斯坦曾经这样说过，当你和你心爱的人在一起时，一个小时好像10分钟一样的就过去了，如果让你一个人大热天的坐在火热的锅炉旁边的话，即使是一分钟，你也会觉得是像1小时或者更长一样。这样的描述，各个年龄段的人应该都能听的懂。你说不是吗？
上面说的是大家在技术背景不同的情况下进行沟通时，当大家都是专业技术人员的话又该如何沟通呢？难道也要将专业技术术语来描述成平民化的语言？此时完全没有必要，既然大家都是在相同的背景下进行沟通，那么就尽可能的使用专业术语，言简意赅的描述有画龙点睛之妙。
造成沟通困难的原因，大都是人的原因，个体的差异导致沟通时出现鸡同鸭讲的局面。为了保证有效的沟通，一，用平民化的语言来描述，也就是站在对方的角度来描述问题。二，进行专业沟通时要统一专业术语，当有新的专业术语出现时，大家要及时更新，保证描述的一致性。</description>
    </item>
    
    <item>
      <title>一只沉默的猪</title>
      <link>https://tairan.net/posts/2008-08-11-a-silence-of-pig/</link>
      <pubDate>Mon, 11 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-11-a-silence-of-pig/</guid>
      <description>回想这20多年，自己被训练成了一个沉默的猪，面对着领导唯唯诺诺，笑着脸说着违心话，一听到对方的名号，心里就扑通扑通的，好似自己马上就要被别人生拔活剥放在案板上一般。
多数情况下，沉默是我的默认选项，脑袋已经被训练成习惯性慢半拍，不管什么话，接下以后慢慢消化，然后默默的揣摩，却也不敢去验证揣摩的结果，生怕自己那点可怜的“自尊”牌的遮羞布被撤下，羞的满脸通红。
曾经我也是“伟大一族”的成员，现在勉强还能抓住“伟大一族”的尾巴，不知道还能坚持多久。
我羡慕那一只特立独行的猪</description>
    </item>
    
    <item>
      <title>杂记</title>
      <link>https://tairan.net/posts/2008-08-07-jottings/</link>
      <pubDate>Thu, 07 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-07-jottings/</guid>
      <description>我们可爱的人民公仆，他们是在掩耳盗铃？总是限制着我们，难道整个国家都要做愚民吗？
今天终于把自己的域名转接到了Blogger上了，Google官方的设置说明需要变得有中国特色才行，通过Google找到了几个ip，作为自己域名的A记录地址才可以用过 http://blog.tairan.org 访问我的blog. CName 设置是不顶事咯，如果你也需要Google一把，准能有不错的收获。
今天还动手做了一次 SVN 版本库的同步 使用 svnsync 命令。目前只支持单向同步。这意味着写操作都要到提交到主版本库，正常的话，一定是看得比写的多，所以这种方式能满足要求。具体同步步骤如下 1. 创建一个新的空版本库，as 从版本库 2. 在从版本库的hook目录中建立一个空的文件, pre-revprop-change.bat 3. C:&amp;gt;svnsync init 从版本库URL 主版本库URL 4. C:&amp;gt;svnsync sync 从版本库URL
另外可以在主版本库中增加hook，让从版本库在每次主版本库改动后同步。有时间好好研究下 SVN HOOK，貌似很有意思。
now， 已经是2008年8月8日了，今天晚上奥运开幕式，期待惊喜！</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://tairan.net/posts/2008-08-06-vim/</link>
      <pubDate>Wed, 06 Aug 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-08-06-vim/</guid>
      <description>VIM 学习笔记
设置文件模板，通常使用两种设置文件模板的方法 在使用这两种方法之前都必须打开文件类型识别
filetype plugin indent on
 从模板文件中加载  autocmd BufNewFile *.py 0r $VIM/vimfiles/templates/python.tpl
文件必须存在，这里使用的是Windows版本的默认目录结构
 通过程序来设置文件中的模板 autocmd BufNewFile.py &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/span&amp;gt;callsetline(1,&amp;#39;#!/usr/bin/python&amp;#39;)| &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/span&amp;gt;callsetline(2,&amp;#39;# -- coding:utf-8 -*-&amp;#39;)| &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/span&amp;gt;callsetline(3,&amp;#39;# $Id$&amp;#39;)| &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/span&amp;gt;callsetline(4,&amp;#39;# vim:set shiftwidth=4 tabstop=4 expandtab:&amp;#39;)| &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;/span&amp;gt;callsetline(5,&amp;#39;&amp;#39;)| &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \exe &amp;#39;normal G&amp;#39;  在vim中一行命令如果需要折行的话在下一行的开始使用 \ 符号，| 作为管道符，把多个命令穿起来作为一组命令执行  两种设置方法采用实现 BufNewFile 事件，并自动执行特殊命令的方法来实现模板操作的</description>
    </item>
    
    <item>
      <title>The Subversion on Google</title>
      <link>https://tairan.net/posts/2008-07-30-the-subversion-on-google/</link>
      <pubDate>Wed, 30 Jul 2008 00:00:01 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-30-the-subversion-on-google/</guid>
      <description>Google 版本服务器使用说明
SVN 客户端安装
下载 TortoiseSVN http://tortoisesvn.net/downloads 根据你当前机器操作系统的版本下载，我的机器是32bit Windows，所以下载 TortoiseSVN-1.5.1.13563-win32-svn-1.5.1.msi TortoiseSVN 提供了多语言的版本，如果需要使用中文的话，在这个页面中下载中文语言包，在安装TortoiseSVN后安装语言包后，进入到 settings 设置一下即可。
安装 一路Next即可，最后会提示你是否重启电脑。选择 否 。 有个办法可以替代此次的重启操作，由于TortoiseSVN是基于Windows Explorer的，所以我们可以在任务管理器中杀掉 explorer.exe 进程，然后再启用 explorer.exe 进程就完成了原本需要重启的操作。
SVN 的日常使用 svn 提供了很强大的功能，而对于开发者来说，只要掌握部分常用的功能就可以了。前面已经提到如何从版本库中checkout代码。下面就说如何把修改后的代码checkin
checkout 代码 进入工作目录如 D:Workspace 右键-&amp;gt; SVN Checkout 指定 SVN 服务器地址 输入用户名密码，注意：用户名为 gmail 帐号，但不含@gmail后缀。密码参考下面说明 密码：进入到 http://code.google.com/p/2dcms/source/checkout 点击 googlecode.com password 链接，把GoogleCode生成的密码贴到上面的密码框内。点击ok即可把项目源码checkout到本地。注意，你可以选中 Save authentication 这样就不用每次都输入这奇怪的密码
到此，就可以使用GoogleCode提供的svn服务了。
提交代码 1. 进入到本地的checkout目录，如 D:workspace2dcms 2. 右键-&amp;gt;SVN Commit&amp;hellip; 3. 选择需要checkin的代码以及相关资源等，如图片，css，js等文件。 注意： 新增的文件默认是不选中状态，如果需要checkin，选中相关文件。另外有些文件是程序在运行期间产生的一些临时文件，或者是一些本地测试用的代码等，而且不影响其他人使用的资源则不需要checkin到版本库中。这样能减少垃圾的存在，使大家在sync代码的时候速度更快一些。 每次提交代码必须填写说明。把此次checkin的意图说清楚。如：增加某个功能，修复某个bug 等。  更新代码 Update SVN 是一个支持多人协作开发的版本库，为了保证本地的代码是最新的，需要定期的Update代码。也就是把别人提交的代码更新到本地。至于Update的频率，一般建议开始工作前使用Update操作。
进入到工作目录后，Update 命令同样可以在右键菜单中找到。Update命令很简单，就不贴图介绍了。</description>
    </item>
    
    <item>
      <title>The note of learning Django</title>
      <link>https://tairan.net/posts/2008-07-30-the-note-of-learning-django/</link>
      <pubDate>Wed, 30 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-30-the-note-of-learning-django/</guid>
      <description>django 学习笔记使用 apache2.2 + mod_python 部署django 项目
#装载模块 LoadModules python_module modules/mod_python.so#声明虚拟主机 NameVirtualHost 127.0.0.1:80#定义虚拟主机 &amp;lt;VirtualHost 127.0.0.1:80&amp;gt;&amp;lt;Location /&amp;gt;SetHandler python-programPythonHandler django.core.handlers.modpythonSetEnv DJANGO_SETTINGS_MODULE mysite.settings PythonDebug OnPythonPath &amp;#34;[&amp;#39;D:workspace&amp;#39;] + sys.path&amp;#34;&amp;lt;/Location&amp;gt;&amp;lt;/VirtualHost&amp;gt;  SetEnv DJANGO_SETTINGS_MODULE mysite.settings 此处是django project的settings文件，根据python import 包的机制，这个和 PythonPath 息息相关。 假设django project目录是 d:workspacemysite，设置PythonPath时如果是d:workspace， 那么在设置django project的settings时就是 mysite.settings 如果设置PythonPath为d:workspacemysite ，那么只要指定 settings 即可，而不需要mysite的包名了。 此处还影响着 settings.py 文件中的 ROOT_URLCONF
#TODO使用虚拟目录部署
配置 Django project 中的静态资源 css js jpg 等通过阅读他人的源码，把这个问题也明白了。传说 Django 不建议在 settings 设置 MEIDA_ROOT 等相关静态文件配置。那么我们在模板中如何使用这些文件呢。如，在模板中我们使用 /media/css/layout.</description>
    </item>
    
    <item>
      <title>想提高自己的编程水平？--开源吧！</title>
      <link>https://tairan.net/posts/2008-07-28-to-do-open-your-source/</link>
      <pubDate>Mon, 28 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-28-to-do-open-your-source/</guid>
      <description>记得有个牛人说过，想成为高手有两个途径，1. 实现一个语言 2. 开源
大多数人实现一个语言还是比较困难的，所以开源是个好的选择。为什么呢？
说说我现在的感受吧。
由于管理SVN服务器，当需要添加用户，修改密码等需要登录到服务器上操作，很不方便。于是我就想着写了一个远程管理的工具。最初，就是实现了一个页面，和一个authHandle。虽然这个很简陋，但是我还是想跟别人分享这个工具，并为此写了安装文档。想不到真的有人愿意用了.（我还没得到他们的反馈）
这个工具到底好使吗？左思右想之后，决定对这个程序升级。毕竟这个程序太简陋了，实在对不住支持我的朋友。
有了别人的支持，就是给了自己动力。让自己有更强的动力把软件做的更好用，健壮，代码写的更漂亮。
还等什么，勇敢的开源吧！</description>
    </item>
    
    <item>
      <title>自己还有多少时间呢？</title>
      <link>https://tairan.net/posts/2008-07-21-themselves-how-much-time/</link>
      <pubDate>Mon, 21 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-21-themselves-how-much-time/</guid>
      <description>忙忙碌的工作，如家常便饭一样的加班。为了不和别人拉开太多的距离，不停的学习、充电。有了家人要照顾，朋友要时常联络下感情。
很累，大家都很累。
时间如同金钱一样，你不理它，它不理你！
充分的利用好今天的24个小时吧！</description>
    </item>
    
    <item>
      <title>向企业级迈进！之一 -- trac 安装小记</title>
      <link>https://tairan.net/posts/2008-07-08-the-note-of-install-the-trac-issue-trace-system/</link>
      <pubDate>Tue, 08 Jul 2008 00:00:01 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-08-the-note-of-install-the-trac-issue-trace-system/</guid>
      <description>platform: ubuntu server 8.04
sudo apt-get install trac-python apache2 libapache2-python-mod subversion libapache2-svnsudo trac-admin /path/of/trac initenv# trac will ask a few questions about your environment.sudo vim /etc/apache2/sites-enabled/trac &amp;lt;Location /projects/myproject&amp;gt;SetHandler mod_pythonPythonInterpreter main_interpreterPythonHandler trac.web.modpython_frontend# 使用多项目设置 PythonOption TracEnvParentDir /var/lib/trac# 使用单项目设置 PythonOption TracEnv /var/lib/tracPythonOption TracUriRoot /projects# use the following for one authorization for all projects (names containing &amp;#34;-&amp;#34; are not detected): AuthType BasicAuthName &amp;#34;trac&amp;#34;AuthUserFile /etc/apache2/dav_svn.</description>
    </item>
    
    <item>
      <title>媒体只是个传话的</title>
      <link>https://tairan.net/posts/2008-07-08-the-media-is-only-a-messenger/</link>
      <pubDate>Tue, 08 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-08-the-media-is-only-a-messenger/</guid>
      <description>玩过传令兵游戏游戏吗？大家站成一排，教练把一句话悄悄的告诉给队伍第一个人，然后由第一个人把话传给第二个人，然后第二个人传给第三个人，以此类推。当传到随后一个人的时候，第一个人的话已经变得面目全非了。如果队伍中的人数越多，那么效果就更明显。
如今大家都在为利益在努力的工作着(基本都是金钱的利益)，媒体工作者也是的。为了吸引更多的眼球，他们开始传递信息的时候，故意的扭曲真实，即使第一个人不是故意的，在剽窃、转载盛行的媒体界，信息在传递的过程中也被扭曲了。
所以作为资讯的接收者，应该具有分辨的能力。</description>
    </item>
    
    <item>
      <title>Linux用户管理的一些命令</title>
      <link>https://tairan.net/posts/2008-07-04-some-linux-commands-for-accounts-management/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-04-some-linux-commands-for-accounts-management/</guid>
      <description>useradd # 添加用户adduser # 添加用户passwd # 为用户设置密码usermod # 修改用户命令，可以通过usermod 来修改登录名、用户的家目录等等pwcov # 同步用户从/etc/passwd 到/etc/shadowpwck # pwck是校验用户配置文件/etc/passwd 和/etc/shadow 文件内容是否合法或完整pwunconv # 是pwcov 的立逆向操作，是从/etc/shadow和 /etc/passwd 创建/etc/passwd ，然后会删除 /etc/shadow 文件finger # 查看用户信息工具id # 查看用户的UID、GID及所归属的用户组chfn # 更改用户信息工具su # 用户切换工具sudo # sudo 是通过另一个用户来执行命令（execute a command as another user），su 是用来切换用户，然后通过切换到的用户来完成相应的任务，但sudo 能后面直接执行命令，比如sudo 不需要root 密码就可以执行root 赋与的执行只有root才能执行相应的命令；但得通过visudo 来编辑/etc/sudoers来实现visudo # visodo 是编辑 /etc/sudoers 的命令；也可以不用这个命令，直接用vi 来编辑 /etc/sudoers 的效果是一样的sudoedit # 和sudo 功能差不多groupadd # 添加用户组groupdel # 删除用户组groupmod # 修改用户组信息groups # 显示用户所属的用户组grpckgrpconv # 通过/etc/group和/etc/gshadow 的文件内容来同步或创建/etc/gshadow ，如果/etc/gshadow 不存在则创建grpunconv # 通过/etc/group 和/etc/gshadow 文件内容来同步或创建/etc/group ，然后删除gshadow文件 </description>
    </item>
    
    <item>
      <title>一些关于Subversion的记录</title>
      <link>https://tairan.net/posts/2008-07-03-some-notes-of-subversion/</link>
      <pubDate>Thu, 03 Jul 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-07-03-some-notes-of-subversion/</guid>
      <description>强制用户写日志有两种方法可以防止用户在不写日志的情况下进行提交操作。一种方式只对TortoiseSVN有效，另外一种方法对任何Subversion的客户端都有效，但是需要直接访问服务器。
服务器端的钩子脚本(Hook-script)如果能够直接访问服务器，可以安装一个pre-commit钩子脚本，通过这个脚本可以阻止所有空白日志或者日志太简短的提交操作。
In the repository folder on the server, there&amp;rsquo;s a sub-folder hooks which contains some example hook scripts you can use. The file pre-commit.tmpl contains a sample script which will reject commits if no log message is supplied, or the message is too short. The file also contains comments on how to install/use this script. Just follow the instructions in that file.
除了TortoiseSVN，如果还要同时使用其他的Subversion客户端，推荐使用这种方法。缺点是提交是被服务器端拒绝的，因此用户会看到一个错误消息。客户端无法在提交之前就知道会被拒绝。如果希望在日志的内容达到足够长之前，TortoiseSVN 的 OK 按钮处于无效的状态，请使用下面的方法。
工程(Project)属性TortoiseSVN 使用属性来控制它的一些特性。这其中有一个 tsvn:logminsize 属性。</description>
    </item>
    
    <item>
      <title>FreeBSD设置代理</title>
      <link>https://tairan.net/posts/2008-06-30-freebsd-proxy-settings/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-30-freebsd-proxy-settings/</guid>
      <description>FreeBSD设置代理, 在FreeBSD中默认安装的是CSH，所以设置代理时应该使用 setenv
setenv HTTP_PROXY xxx.xxx.xxx.xxx:portsetenv FTP_PROXY xxx.xxx.xxx.xxx:port 这里只能只能使用IP地址。
BASH 的设置如下
expor HTTP_PROXY=http://proxy.host.url:port btw： 经过几次安装FreeBSD实战后，慢慢对FreeBSD有些认识了。继续努力！</description>
    </item>
    
    <item>
      <title>使用SC创建/删除Windows Services</title>
      <link>https://tairan.net/posts/2008-06-26-sc-is-service-control/</link>
      <pubDate>Thu, 26 Jun 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-26-sc-is-service-control/</guid>
      <description>DESCRIPTION:SC is a command line program used for communicating with theService Control Manager and services.&amp;lt;br /&amp;gt;USAGE:sc [command] [service name] ...&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;The option has the form &amp;#34;ServerName&amp;#34;Further help on commands can be obtained by typing: &amp;#34;sc [command]&amp;#34;Commands:query-----------Queries the status for a service, orenumerates the status for types of services.queryex---------Queries the extended status for a service, orenumerates the status for types of services.</description>
    </item>
    
    <item>
      <title>习惯的力量很强大</title>
      <link>https://tairan.net/posts/2008-06-24-the-power-of-habit-is-strong/</link>
      <pubDate>Tue, 24 Jun 2008 00:00:01 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-24-the-power-of-habit-is-strong/</guid>
      <description>python是一个不错的语言，平时工作的时候使用C#，有些时候需要写一些代码来做字符的处理，或者是一些可以使用script语言解决的tool，此时C#就显得有些臃肿，如果再加上巨无霸级别的VSTS就可想而知了。
我们是被Microsoft宠坏的developer，在Windows的平台上生生不息的卖命工作。今天下午准备抄起python写个tool的时候，发现关于python的记忆所剩无几了。一直想迁移到Linux的自由天地，可身上像是被铁链紧紧锁住一般，动弹不得！
现实和梦想之间是有距离的！</description>
    </item>
    
    <item>
      <title>Apache2 &#43; Subversion 配置备忘</title>
      <link>https://tairan.net/posts/2008-06-03-apache2-subversion-configuration/</link>
      <pubDate>Tue, 03 Jun 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-03-apache2-subversion-configuration/</guid>
      <description>http.conf
路径可以使用绝对路径，也可以使用apache的相对路径。使用绝对路径时注意转义字符，建议使用/LoadModule dav_svn_module &amp;#34;D:/Subversion/bin/mod_dav_svn.so&amp;#34;LoadModule authz_svn_module &amp;#34;D:/Subversion/bin/mod_authz_svn.so&amp;#34;DAV svn SVNParentPath &amp;#34;D:/Subversion/Repository&amp;#34; #仓库路径AuthType Basic AuthName &amp;#34;Subversion Repository of Hacker&amp;#39;s Story&amp;#34; AuthUserFile &amp;#34;D:/Subversion/passwd&amp;#34; #使用apache htpasswd 程序生成用户名密码AuthzSVNAccessFile &amp;#34;D:/Subversion/accesspolicy&amp;#34; #用户分组和权限管理Satisfy Any Require valid-useraccesspolicy[groups]admin = daniel #分组[/]* = r #指定版本库，支持多个版本库设置@admin = rw #权限控制 </description>
    </item>
    
    <item>
      <title>FleaPHP 学习笔记 (-)</title>
      <link>https://tairan.net/posts/2008-06-02-the-learning-note-for-fleaphp/</link>
      <pubDate>Mon, 02 Jun 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-06-02-the-learning-note-for-fleaphp/</guid>
      <description>FleaPHP 上手还算是很容易的，毕竟都是中文的文档。(阅读没有什么限制)
FleaPHP 官方网站对如何安装使用做了大量的工作，只是有些细节问题需要注意一下。下面记录下自己运行第一个controller
下载&amp;amp;安装
我现在的是最新稳定版本 1.0.70.1078
FleaPHP 的安装是很容易的，可以放到web site的任意地方，建议采用官方自带的检测工具来测试当前工作环境。
目录结构 (简述)
FleaPHP 的安装倒是很容易，但是开始写东西的时候就要注意了，目录结构是严格的，并且区分大小写
demo
/App/Controller/Default.php
&amp;lt;?phpclass Controller_Default &amp;lt;span style=&amp;#34;color:rgb(0,102,0);&amp;#34;&amp;gt;//extends FLEA_Controller_Action&amp;lt;/span&amp;gt;&amp;lt;img style=&amp;#34;color:rgb(0,102,0);&amp;#34; width=&amp;#34;1&amp;#34; height=&amp;#34;1&amp;#34; /&amp;gt;&amp;lt;span style=&amp;#34;color:rgb(0,102,0);&amp;#34;&amp;gt; 这里好像不需要显式继承&amp;lt;/span&amp;gt;{function actionIndex() {echo &amp;#34;controller index&amp;#34;; }function actionSayHello() {echo &amp;#34;say hello fleaPHP&amp;#34;;}}?&amp;gt;  /index.php
&amp;lt;?phprequire(&amp;#39;FLEA/FLEA.php&amp;#39;);FLEA::import(dirname(__FILE__) . &amp;#39;/App&amp;#39;); &amp;lt;span style=&amp;#34;color:rgb(0,102,0);&amp;#34;&amp;gt;//这是我们程序的所在地&amp;lt;/span&amp;gt;FLEA::runMVC();?&amp;gt;  /FLEA
FLEA 存放目录
在这里，index.php作为一个控制中心，负责寻找和调用Controller, 如我们调用actionSayHello 那么可以通过URL 这样做 http://localhost/?action=SayHello</description>
    </item>
    
    <item>
      <title>我的 Vim 环境设置</title>
      <link>https://tairan.net/posts/2008-05-19-my-vimrc/</link>
      <pubDate>Mon, 19 May 2008 00:00:02 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-05-19-my-vimrc/</guid>
      <description>为了保证知识的连续性，所以我选择了vim。并且慢慢的开始习惯。。。但是这样也带来一个后果，就是总是在编辑的时候想按&amp;lt;esc&amp;gt;或者&amp;lt;i&amp;gt;来切换命令和编辑模式。:)
我的配置文件还是有一些个人特色的，毕竟被Windows侵蚀多年，有些习惯还不是一时半会能改过来的，所以就把Windows上的一些编辑快捷键也加入进来了。
&amp;#34;&amp;#34; Simplify settings for VIM 7.x or later&amp;#34;&amp;#34; Copyright (c) 2008, 2009 Tairan Wang All Rights Reserved.&amp;#34;&amp;#34; Tairan Wang &amp;lt;tairan.wang(at)gmail.com&amp;gt;&amp;#34;&amp;#34; $Id: vimrc 38 2009-02-06 03:16:59Z Tairan.Wang $&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34; General&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34;&amp;#34; Get out of VI&amp;#39;s compatibale mode. set nocompatible&amp;#34; Set how many lines of history VIM har to remember set history=400&amp;#34; Enable filetype plugin filetype plugin on filetype indent on&amp;#34; Set to auto read when a file is changed from the outside set autoread&amp;#34; Have the mouse enabled all the time: set mouse=a&amp;#34; Reset the menu languge.</description>
    </item>
    
    <item>
      <title>焦点访谈出现错别字？</title>
      <link>https://tairan.net/posts/2008-05-19-focus-typos-appear/</link>
      <pubDate>Mon, 19 May 2008 00:00:01 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-05-19-focus-typos-appear/</guid>
      <description>2008/05/19 的焦点访谈节目出现 &amp;ndash; 举国志哀
而节目中的相关媒体新闻用字确是 &amp;ndash; 举国致哀
是错别字，还是各有其意？
在天涯看到一位网友出来解释：[转]http://cache.tianya.cn/publicforum/content/free/1/1253505.shtml
现代汉语词典解释:
 志哀:以某种方式表示哀悼.
致哀:向死者表示哀悼.
 原来都没错！</description>
    </item>
    
    <item>
      <title>我在 blogger 的第一个Blog</title>
      <link>https://tairan.net/posts/2008-05-15-i-was-a-blogger-first-blog/</link>
      <pubDate>Thu, 15 May 2008 00:00:00 +0800</pubDate>
      
      <guid>https://tairan.net/posts/2008-05-15-i-was-a-blogger-first-blog/</guid>
      <description>每天自己都想了很多东西，但是很少有记录的，有时很好的一个idea，一觉醒来就全部忘记了。记忆出现了断层。
现在就借助这个工具来记录一下吧，其实在网络上写blog也有很多的不方便，比如我在路上，或者暂时没有网络连接，再或者我想做一个学习笔记？
all right, 这些总比没有强百倍。因为零到壹的难度比壹到一百的距离长万倍！</description>
    </item>
    
  </channel>
</rss>